// <auto-generated />
using System;
using GeoGuardian.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace GeoGuardian.Migrations
{
    [DbContext(typeof(GeoGuardianContext))]
    [Migration("20250601053919_SeedUserType")]
    partial class SeedUserType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeoGuardian.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Complement")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("NUMBER(9,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("NUMBER(9,6)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("StreetId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("AddressId");

                    b.HasIndex("StreetId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("RiskAreaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RiskLevel")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("AlertTypeId");

                    b.HasIndex("RiskAreaId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("GeoGuardian.Entities.AlertType", b =>
                {
                    b.Property<int>("AlertTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("AlertTypeId");

                    b.ToTable("AlertType");

                    b.HasData(
                        new
                        {
                            AlertTypeId = 1,
                            Name = "INFO"
                        },
                        new
                        {
                            AlertTypeId = 2,
                            Name = "WARNING"
                        },
                        new
                        {
                            AlertTypeId = 3,
                            Name = "CRITICAL"
                        });
                });

            modelBuilder.Entity("GeoGuardian.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("StateId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Neighbourhood", b =>
                {
                    b.Property<int>("NeighbourhoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NeighbourhoodId"));

                    b.Property<int>("CityId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("NeighbourhoodId");

                    b.HasIndex("CityId");

                    b.ToTable("Neighbourhood");
                });

            modelBuilder.Entity("GeoGuardian.Entities.RiskArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RiskAreaTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("StreetId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RiskAreaTypeId");

                    b.HasIndex("StreetId");

                    b.ToTable("RiskAreas");
                });

            modelBuilder.Entity("GeoGuardian.Entities.RiskAreaType", b =>
                {
                    b.Property<int>("RiskAreaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RiskAreaTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("RiskAreaTypeId");

                    b.ToTable("RiskAreaType");

                    b.HasData(
                        new
                        {
                            RiskAreaTypeId = 1,
                            Name = "FLOOD"
                        },
                        new
                        {
                            RiskAreaTypeId = 2,
                            Name = "LANDSLIDE"
                        },
                        new
                        {
                            RiskAreaTypeId = 3,
                            Name = "DAM_BREAK"
                        });
                });

            modelBuilder.Entity("GeoGuardian.Entities.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RiskAreaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SensorModelId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("RiskAreaId");

                    b.HasIndex("SensorModelId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("GeoGuardian.Entities.SensorModel", b =>
                {
                    b.Property<int>("SensorModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SensorModelId"));

                    b.Property<string>("Maker")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("SensorModelId");

                    b.ToTable("SensorModel");

                    b.HasData(
                        new
                        {
                            SensorModelId = 1,
                            Maker = "Acme",
                            Name = "ULTRASONIC_WL-X100"
                        },
                        new
                        {
                            SensorModelId = 2,
                            Maker = "Acme",
                            Name = "SOILMOIST-S200"
                        });
                });

            modelBuilder.Entity("GeoGuardian.Entities.SensorReading", b =>
                {
                    b.Property<long>("SensorReadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SensorReadingId"));

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 3)
                        .HasColumnType("DECIMAL(18,3)");

                    b.HasKey("SensorReadingId");

                    b.HasIndex("SensorId");

                    b.ToTable("SensorReading");
                });

            modelBuilder.Entity("GeoGuardian.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Street", b =>
                {
                    b.Property<int>("StreetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreetId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("NeighbourhoodId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("StreetId");

                    b.HasIndex("NeighbourhoodId");

                    b.ToTable("Street");
                });

            modelBuilder.Entity("GeoGuardian.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeoGuardian.Entities.UserAlert", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("AlertId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ConfirmedReception")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SendMode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "AlertId");

                    b.HasIndex("AlertId");

                    b.ToTable("UserAlert");
                });

            modelBuilder.Entity("GeoGuardian.Entities.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserTypeId");

                    b.ToTable("UserType");

                    b.HasData(
                        new
                        {
                            UserTypeId = 1,
                            Name = "ADMIN"
                        },
                        new
                        {
                            UserTypeId = 2,
                            Name = "USER"
                        });
                });

            modelBuilder.Entity("GeoGuardian.Entities.Address", b =>
                {
                    b.HasOne("GeoGuardian.Entities.Street", "Street")
                        .WithMany("Addresses")
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeoGuardian.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Street");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Alert", b =>
                {
                    b.HasOne("GeoGuardian.Entities.AlertType", null)
                        .WithMany("Alerts")
                        .HasForeignKey("AlertTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeoGuardian.Entities.RiskArea", "RiskArea")
                        .WithMany("Alerts")
                        .HasForeignKey("RiskAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskArea");
                });

            modelBuilder.Entity("GeoGuardian.Entities.City", b =>
                {
                    b.HasOne("GeoGuardian.Entities.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Neighbourhood", b =>
                {
                    b.HasOne("GeoGuardian.Entities.City", "City")
                        .WithMany("Neighbourhoods")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("GeoGuardian.Entities.RiskArea", b =>
                {
                    b.HasOne("GeoGuardian.Entities.RiskAreaType", null)
                        .WithMany("RiskAreas")
                        .HasForeignKey("RiskAreaTypeId");

                    b.HasOne("GeoGuardian.Entities.Street", "Street")
                        .WithMany("RiskAreas")
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Street");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Sensor", b =>
                {
                    b.HasOne("GeoGuardian.Entities.RiskArea", "RiskArea")
                        .WithMany("Sensors")
                        .HasForeignKey("RiskAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeoGuardian.Entities.SensorModel", null)
                        .WithMany("Sensors")
                        .HasForeignKey("SensorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RiskArea");
                });

            modelBuilder.Entity("GeoGuardian.Entities.SensorReading", b =>
                {
                    b.HasOne("GeoGuardian.Entities.Sensor", "Sensor")
                        .WithMany("Readings")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("GeoGuardian.Entities.State", b =>
                {
                    b.HasOne("GeoGuardian.Entities.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Street", b =>
                {
                    b.HasOne("GeoGuardian.Entities.Neighbourhood", "Neighbourhood")
                        .WithMany("Streets")
                        .HasForeignKey("NeighbourhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Neighbourhood");
                });

            modelBuilder.Entity("GeoGuardian.Entities.User", b =>
                {
                    b.HasOne("GeoGuardian.Entities.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("GeoGuardian.Entities.UserAlert", b =>
                {
                    b.HasOne("GeoGuardian.Entities.Alert", "Alert")
                        .WithMany("UserAlerts")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeoGuardian.Entities.User", "User")
                        .WithMany("UserAlerts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Alert", b =>
                {
                    b.Navigation("UserAlerts");
                });

            modelBuilder.Entity("GeoGuardian.Entities.AlertType", b =>
                {
                    b.Navigation("Alerts");
                });

            modelBuilder.Entity("GeoGuardian.Entities.City", b =>
                {
                    b.Navigation("Neighbourhoods");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Neighbourhood", b =>
                {
                    b.Navigation("Streets");
                });

            modelBuilder.Entity("GeoGuardian.Entities.RiskArea", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("GeoGuardian.Entities.RiskAreaType", b =>
                {
                    b.Navigation("RiskAreas");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Sensor", b =>
                {
                    b.Navigation("Readings");
                });

            modelBuilder.Entity("GeoGuardian.Entities.SensorModel", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("GeoGuardian.Entities.State", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("GeoGuardian.Entities.Street", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("RiskAreas");
                });

            modelBuilder.Entity("GeoGuardian.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("UserAlerts");
                });

            modelBuilder.Entity("GeoGuardian.Entities.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
